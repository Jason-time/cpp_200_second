#include <iostream>
using namespace std;

int main(int argc, char* argv[] )
{
std::cout << "Hello World!" << endl;
return 0;
}

// 001 - C++프로그래밍 시작하기

#include <iostream>

using namespace std;

int main(int argc, char* argv[] )
{
    int number = 0;

    cin >> number;

    cout << "입력한 숫자는 " << number << "입니다." << endl;
    
    return 0;
}

// 002 - 콘솔창에 출력하기 ( cout, cin, endl )

#include <iostream>

using namespace std;

int main(int argc, char* argv[] )
{
    int one = 1;
    int two = 2;
    int sum = one + two;

    cout << "1 + 2 = " << sum << endl;
    
    return 0;
}

// 003 - 변수 배우기 

#include <iostream>
using namespace std;

int main(int argc, char* argv[])
{
    const int GREATE_VICTORY_SALSU = 612;
    const int GREATE_VICTORY_GWIJU = 1019;

    cout << "고구려 살수대첩 연도 : " << GREATE_VICTORY_SALSU << "년" << endl;
    cout << "고려 귀주대첩 연도 : " << GREATE_VICTORY_GWIJU << "년" << endl;
    return 0;
}

// 004 - 상수 배우기( const )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
    int one = 1;
    int two = 2;
    int three = 3;
    int four = 4;

    cout << "1 + 3 = " << one + three << endl;
    cout << "4 - 2 = " << four - two << endl;
    cout << "2 * 3 = " << two * three << endl;
    cout << "4 / 2 = " << four / two << endl;

    cout << "2 + 3 * 4 = " << two + three * four << endl;
    cout << "1 + 4 / 2 = " << one + four / two << endl;

    return 0;
}

// 005 - 사칙연산 배우기 ( +, -, *, / )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int two = 2;
	int eight = 8;
	int sum1 = 2;
	int sum2 = 2;

	sum1 = sum1 + two;
	sum2 += eight;

	cout << "sum1 = " << sum1 << endl;
	cout << "sum2 = " << sum2 << endl;

	sum1 = 2;
	sum2 = 8;
	sum1 *= two;
	sum2 /= eight;

	cout << "sum1 = " << sum1 << endl;
	cout << "sum2 = " << sum2 << endl;
	return 0;
}

// 006 - 사칙연산 축약하기 ( +, -, *, / )

#include <iostream>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	char character = 'C';
	int  integer = 100;
	double precision = 3.14159;
	bool is_true = true;
	string word = "Hello World";

	cout << "char : " << character << endl;
	cout << "int : " << integer << endl;
	cout << "double : " << precision << endl;
	cout << "bool : " << is_true << endl;
	cout << "string : " << word << endl;

	return 0;
}

// 007 - 자료형 이해하기 ( char, int, double, bool, string )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int x = 10;
	int y = 1;

	if (x > y)
		cout << "x는 y보다 큽니다." << endl;
	else
		cout << "x는 y보다 작습니다." << endl;
	
	return 0;
}

// 008 - 조건문 배우기 ( if~else )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int sum1 = 0;
	int sum2 = 0;

	int one = 1;
	int two = 2;

	for (int i = 0;i < 5; i++) {

		sum1 += one;
		sum2 += two;
	}

	cout << "합산 결과 : " << sum1 << ", " << sum2 << endl;

	return 0;
}

// 009 - 순환문 배우기 ( for )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	const int kArraySize = 2;

	int founding[kArraySize];
	founding[0] = 918;
	founding[1] = 1392;

	cout << "고려 건국 연도 : " << founding[0] << endl;
	cout << "조선 건국 연도 : " << founding[1] << endl;

	return 0;
}

// 010 - 배열 배우기 ( [크기] )

#include <iostream>

using namespace std;

void Minus(const int x, const int y) {

	cout << "x - y = " << x - y << endl;
}

int Plus(const int x, const int y) {

	return x + y;
}

int main(int argc, char* argv[])
{
	Minus(10, 5);

	cout << "x + y = " << Plus(2, 6) << endl;
	
	return 0;
}

// 011 - 함수 배우기 ( () )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	//출력하지 않을 코드
	//Minus(10, 5);
	/*
	cout << "x + y = " << Plus(2, 6) << endl; 
	*/
	
	return 0;
}

// 012 - 주석 배우기 ( //, /* */ )

#include <iostream>

using namespace std;

namespace silla {

	int year = 935;

	void CentralArea() {

		cout << "경상도" << endl;
	}
}

namespace baekjae {

	int year = 660;

	void CentralArea() {

		cout << "충청도" << endl;
	}
}
 using namespace silla;
 using namespace baekjae;

int main(int argc, char* argv[])
{
	cout << "신라 중심지 : ";
	silla::CentralArea();
	cout << "신라 멸망연도 : " << silla::year << endl;

	cout << "백제 중심지 : ";
	baekjae::CentralArea();
	cout << "백제 멸망연도 : " << baekjae::year << endl;
	
	return 0;
}

// 013 - 네임스페이스 배우기 ( namespace )

#include <iostream>
#include <vector>

using namespace std;

int main(int argc, char* argv[])
{
	vector<int> exam;
	exam.push_back(10);
	exam.push_back(20);
	exam.push_back(30);

	for (int i = 0, size = exam.size();i < size;i++) {

		cout << "벡터 값 : " << exam.at(i) << endl;
	}

	return 0;
}

// 014 - #include 배우기 

#include <iostream>

using namespace std;

int x = 10;

int Func1() {

	int y = x + 10;
	return y;
}

int Func2() {

	int x = 100;
	return x;
}

int main(int argc, char* argv[])
{
	cout << "y = " << Func1() << endl;
	cout << "x = " << Func2() << endl;
	cout << "x = " << x << endl;

	return 0;
}

// 015 - 스코핑룰 이해하기 ( {} ) 

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	char ch1 = 'c';
	char ch2 = 200;

	unsigned char ch3 = 'c';
	unsigned char ch4 = 200;

	printf("char ch1 = %c, %d\n", ch1, ch1);
	printf("char ch2 = %c, %d\n", ch2, ch2);
	printf("char ch3 = %c, %d\n", ch3, ch3);
	printf("char ch4 = %c, %d\n", ch4, ch4);
	
	return 0;
}

// 016 - 문자형 변수 이해하기 ( char ) 

#include <iostream>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	string my_country = "korea";
	string my_job = "developer";

	cout << "Country : " << my_country << endl;
	cout << "Job : " << my_job << endl;

	string my_info = my_country + ", " + my_job;

	cout << "My Info : " << my_info << endl;

	return 0;
}

// 017 - 문자열형 변수 이해하기 ( string )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int poositive = 100;
	int negaative = -200;
	int ascii_value = 'A';

	cout << "양수 값 : " << poositive << endl;
	cout << "음수 값 : " << negaative << endl;
	cout << "아스키 값 : " << ascii_value << endl;

	return 0;
}

// 018 - 정수형 변수 이해하기(int)

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	double pi_d = 3.14;
	float pi_f = 3.14f;

	cout << "pi_d = " << pi_d << endl;
	cout << "pi_f = " << pi_f << endl;

	return 0;
}

// 019 - 실수형 변수 이해하기 ( double ) 

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int x = 10;
	int y = 6;

	bool is_true = false;

	if (x > y) {

		is_true = true;
	}
	else {

		is_true = false;
	}

	if (is_true == true) {
		cout << "x는 y보다 큽니다." << endl;
	}
	else {

		cout << "x는 y보다 작습니다." << endl;
	}

	return 0;
}

// 020 - 논리형 변수 이해하기 ( bool )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int x = 1;
	int y = 9;

	int z = x + y;

	double i = 1.2;
	double j = 2.3;

	double k = i + j;

	cout << "x + y = " << z << endl;
	cout << "i + y = " << k << endl;

	return 0;
}

// 021 - 대입 연산자 이해하기 ( = )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int x = 1;
	int y = -1;
	int z = -2;

	cout << "1 + (-1) = " << x + y << endl;
	cout << "-1 + -2 = " << y + z << endl;

	return 0;
}

// 022 - 부호 연산자 이해하기 ( +, - )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int x = 1;

	cout << "x = " << x++ << endl;
	cout << "x = " << x++ << endl;
	cout << "x = " << ++x << endl;
	cout << "x = " << x-- << endl;
	cout << "x = " << x-- << endl;
	cout << "x = " << --x << endl;
	return 0;
}

// 023 - 증감 연산자 이해하기 ( ++, -- )

#include <iostream>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	string publisher = "출판사";
	string language = "C++";

	int x = 10;
	int y = 10;

	if (publisher != language)
		cout << "두 문장은 같지 않습니다. " << endl;
	else
		cout << "두 문장은 같습니다. " << endl;

	if (x >= y)
		cout << "x는 y보다 크거나 같습니다." << endl;
	else
		cout << "x는 y보다 크거나 같지 않습니다." << endl;

	if (x <= 20)
		cout << "x는 20보다 작거나 같습니다." << endl;
	else
		cout << "x는 20보다 작거나 같지 않습니다." << endl;

	return 0;
}

// 024 - 관게 연산자 이해하기 ( ==, !=, <, <=, >, >= )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int x = 10;
	int y = 20;

	bool is_x = true;
	bool is_y = false;

	if (is_x == true && is_y == true)
		cout << "is_x && is_y = " << "true" << endl;
	else
		cout << "is_x && is_y = " << "false" << endl;

	if (x == 10 || is_x == false)
		cout << "x가 10이거나 is_x가 true입니다." << endl;
	else
		cout << "x는 10이 아니며 is_x도 false가 아닙니다." << endl;

	if (!is_y)
		cout << "is_y 원래 값은 false입니다." << endl;
	else
		cout << "is_y원래 값은 true입니다." << endl;

	return 0;
}

// 025 - 논리 연산자 이해하기 ( and(&&), or(||), not(!) )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int x = 1;
	int y = 2;
	int z = 0;

	z = x > y ? x : y;

	cout << "x와 y중 더 큰 값은 : " << z << endl;

	return 0;
}

// 026 - 조건부 삼항 연산자 이해하기 ( ? : )
#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int goguryeo = 37, baekjae = 18, silla = 57;

	printf("삼국 건국연도\n");
	printf("고구려 bc%d년, 백제 bc%d년, 신라 bc%d년", goguryeo, baekjae, silla);

	return 0;
}

// 027 - 쉼표 연산자 이해하기 (,)

#include <iostream>
#include <bitset>

using namespace std;

int main(int argc, char* argv[])
{
	bitset<8> bit1;
	bit1.reset(); // 0000 0000
	bit1 = 127; // 0111 1111

	bitset<8> bit2;
	bit2.reset();
	bit2 = 0x20; //32

	bitset<8> bit3 = bit1 & bit2;
	bitset<8> bit4 = bit1 | bit2;
	bitset<8> bit5 = bit1 ^ bit2;
	bitset<8> bit6 = ~bit1;
	bitset<8> bit7 = bit2 << 1;
	bitset<8> bit8 = bit2 >> 1;

	cout << "bit1 & bit2 : " << bit3 << ", " << bit3.to_ulong() << endl;
	cout << "bit1 | bit2 : " << bit4 << ", " << bit4.to_ulong() << endl;
	cout << "bit1 ^ bit2 : " << bit5 << ", " << bit5.to_ulong() << endl;
	cout << "~bit1 : " << bit6 << ", " << bit6.to_ulong() << endl;
	cout << "bit2 << 1 : " << bit7 << ", " << bit7.to_ulong() << endl;
	cout << "bit2 >> 1 : " << bit8 << ", " << bit8.to_ulong() << endl;

	return 0;
}

// 028 - 비트 연산자 이해하기 ( &, ~, <<, >> ^ )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int x = 2;
	double y = 4.4;

	int i = static_cast<int>(y / x);
	int j = (int)y / x;
	double k = y / x;

	cout << "4.4 / 2 = (static_cast<int>) " << i << endl;
	cout << "4.4 / 2 = (int) " << j << endl;
	cout << "4.4 / 2 = " << k << endl;

	return 0;
}

// 029 - 캐스트 연산자 이해하기 ( static_cast )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int number1 = 65;
	double number2 = 23.4;

	int number3 = int(number2);
	double number4 = double(number1 / number2);

	char ch = char(number1);

	cout << "number1 : " << number1 << endl;
	cout << "number2 : " << number2 << endl;
	cout << "number3 : " << number3 << endl;
	cout << "number4 : " << number4 << endl;
	cout << "ch : " << ch << endl;

	return 0;
}

// 030 - 명시적 변환 이해하기 ( () )

#include <iostream>

using namespace std;

class Temp {
	int no;
	bool is_on;
};

int main(int argc, char* argv[])
{
	cout << "char 크기 : " << sizeof('p') << endl;
	cout << "int 크기 : " << sizeof(10) << endl;
	cout << "double 크기 : " << sizeof(10.0) << endl;
	cout << "클래스 크기 : " << sizeof(Temp) << endl;

	return 0;
}

// 031 - 자료형의 크기 이해하기 ( sizeof )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int number1 = 100;
	int number2 = 6;

	if (number1 < number2)
		cout << "number2가 더 큽니다. " << endl;
	else if (number1 > number2)
		cout << "number1이 더 큽니다. " << endl;
	else
		cout << "number1과 number2는 같습니다." << endl;

	if (number2 < 7) {

		if (number2 > 3) {

			if (number2 == 4)
				cout << "number2은 4입니다." << endl;
			else if (number2 == 5)
				cout << "number2는 5입니다." << endl;
			else
				cout << "number2는 6입니다." << endl;
		}
		else
		{
			if (number2 == 3)
				cout << "number2는 3입니다. " << endl;
			else if (number2 == 2)
				cout << "number2는 2입니다." << endl;
			else
				cout << "number2는 1이하 입니다." << endl;
		}
	}

	return 0;
}

// 032 - 중첩 조건문 이해하기 ( if~else if~else )

#include <iostream>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	int number1 = 100;
	int number2 = 200;
	int number3 = 300;

	if (number1 > number2 && number1 > number3)
		cout << "가장 큰 수 number1 : " << number1 << endl;
	else if (number2 > number1 && number2 > number3)
		cout << "가장 큰 수 number2 : " << number2 << endl;
	else if (number3 > number1 && number3 > number2)
		cout << "가장 큰 수 number3 : " << number3 << endl;
	else
		cout << "찾을 수 없습니다." << endl;

	return 0;
}

// 033 - 중첩 조건문으로 가장 큰 수 찾기 ( if~else )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int number = 7;

	for (int i = 0;i < 10; i++) {
		
		if (i % 3 == 0)
			continue;
		else if (i == number)
			break;
		else
			cout << "현재 i 값 : " << i << endl;
	}
	return 0;
}

// 034 - 중첩 순환문 이해하기 ( for~continue~break )

#include <iostream>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	string str = "I'm a boy. You are a girl.";

	char find = 'a';

	int size = str.size();
	int count = 0;

	for (int i = 0;i < size;i++) {

		if (str[i] == find)
			count++;
	}

	cout << "문장의 a 개수는 " << count << "개 입니다." << endl;

	return 0;
}

// 035 - 순환문으로 특정 문자 개수 구하기(for)

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int data[10] = { 5,19,76, 3,10,89,54,43,1,17 };

	for (int i =0;i<10;i++){

		if (data[i] % 2 == 0)
			cout << i << " ; " << data[i] << "는 짝수입니다." << endl;
		else
			cout << i << " ; " << data[i] << "는 홀수입니다." << endl;
	}

	return 0;
}

// 036 - 순환문으로 홀수, 짝수 찾기 ( for )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int number = 2;

	switch (number) {

		case 1:
			cout << "number 값은 1입니다." << endl;
			break;
		case 2:
			cout << "number 값은 2입니다." << endl;
			break;
		default:
			cout << "number 값을 알 수 없습니다." << endl;
			break;
	}

	return 0;
}

// 037 - 조건 선택문 이해하기 ( switch~case~default )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int number = 0;

	while (number < 10) {

		number++;

		if (number % 3 == 0)
			continue;
		else
			cout << "number 값 : " << number << endl;
	}

	return 0;
}

// 038 - 조건 순환문 이해하기 ( while~continue~break )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int number = 0;

	do {
		number++;

		if (number % 3 == 0)
			continue;
		else
			cout << "number 값 : " << number << endl;
	} while (number < 10);

	return 0;
}

// 039 - 조건 순환문 이해하기 ( do~while~continue~break )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int offset = 0;

	for (int i = 1;i <= 15; i += offset) {

		for (int j = 1;j <= 9;j++) {

			cout << i << " * " << j << " = " << i * j;
			for (int k = 0; k < offset;k++) {

				cout << "\t";
				cout << (i + k + 1) << " * " << j << " = " << (i + k + 1) * j;
			}

			cout << endl;
		}

		cout << endl;

		offset++;
	}
	return 0;
}

// 040 - 반복문을 이용하여 구구단 (15단) 출력하기

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int p = 0;
	int n = 0;
	int t = 0;

	for (int i = 1; i < 10; i++) {
		p = 0;
		n = 1;

		for (int j = 1; j <= i; j++) {

			cout << n << ", ";

			t = n;
			n += p;
			p = t;
		}
		cout << endl;
	}
	return 0;
}

// 041 - 반복문을 이용하여 피보나치 수열 출력하기

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int offset = 4;

	for (int i = 1, j = 0; i <= offset; i++, j = 0) {

		for (int k = 1; k <= offset - i;k++)
			cout << "  ";
		while (j != 2 * i - 1) {

			cout << "* ";
			j++;
		}
		cout << endl;
	}
	return 0;
}

// 042 - 반복문을 이용하여 피라미드 출력하기

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	cout << "== 소수점 버리기==" << endl;
	cout << "floor(2.3) : " << floor(2.3) << endl;
	cout << "floor(-55.7) : " << floor(-55.7) << endl;

	cout << "== 소수점 올리기==" << endl;
	cout << "ceil(2.3) : " << ceil(2.3) << endl;
	cout << "ceil(-55.7) : " << ceil(-55.7) << endl;
	
	return 0;
}

// 043 - 실수 소수점 버리기 올리기 ( floor, ceil )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	cout << "round(1.1) : "<<round(1.1) << endl;
	cout << "round(-2.3) : "<<round(-2.3) << endl;
	cout << "round(40.5) : "<<round(40.5) << endl;
	cout << "round(55.7) : "<<round(55.7) << endl;
	cout << "round(100.9) : "<<round(100.9) << endl;
	return 0;
}

// 044 - 실수 반올림하기 ( round )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	cout << "==절대값 구하기==" << endl;
	cout << "-10의 절대값  " << abs(-10) << endl;
	cout << "-5.72의 절대값 " << fabs(-5.72) << endl;
	cout << endl;

	cout << "==제곱수 구하기==" << endl;
	cout << "2의 2승 : " << pow(2, 2) << endl;
	cout << "3의 4승 : " << pow(3, 4) << endl;
	
	return 0;
}

// 045 - 절대값과 제곱수 구하기 ( abs, fabs, pow )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	double x = 5.7;
	int div1 = static_cast<int>(x / 5);
	double mod1 = x - 5 * static_cast<int>(x / 5);

	int y = 10;
	int div2 = static_cast<int>(y / 2);
	double mod2 = y % 2;

	cout << "5.7 / 5 = 몫 : " << div1 << ", 나머지 : " << mod1 << endl;
	cout << "10 / 2 = 몫 : " << div2 << ", 나머지 : " << mod2 << endl;

	return 0;
}

// 046 - 몫과 나머지 구하기 ( % )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	cout << "4의 제곱근 : " << sqrt(4.0) << endl;
	cout << "16의 제곱근 : " << sqrt(16) << endl;
	cout << "64의 제곱근 : " << sqrt(64) << endl;
	cout << "256의 제곱근 : " << sqrt(256.0) << endl;

	return 0;
}

// 047 - 제곱근 구하기 ( sqrt ) 

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	double x = 1.2345;
	double div = 0.0;
	double mod = 0.0;

	mod = modf(x, &div);

	cout << "1.2345의 몫 : " << div << ", 나머지 : " << mod << endl;

	return 0;
}

// 048 - 소수점 분리하기 ( modf )

#include <iostream>
#include <ctime>

using namespace std;

int main(int argc, char* argv[])
{
	srand(static_cast<unsigned int> ( time(NULL)));

	for (int i = 0; i < 5; i++)
		cout << "난수 : " << rand() << endl;

	return 0;
}

// 049 - 난수 생성하기 ( srand, rand )

#include <iostream>
#include <random>
#include <algorithm>
#include <ctime>

using namespace std;

int main(int argc, char* argv[])
{
	string str1 = "1a2b3c4d5e6f7g8h9i";
	string str2 = "republic of korea";
	int data1[10] = { 1,2,3,4,5,6,7,8,9,10 };

	srand(static_cast<unsigned int>(time(NULL)));
	
	random_shuffle(str1.begin(), str1.end());
	random_shuffle(str2.begin(), str2.end());
	random_shuffle(data1, data1 + 4);

	cout << "== str1 ==" << endl;
	for (auto i : str1)
		cout << i << ", ";

	cout << endl << "== str2 ==" << endl;
	for (auto i : str2)
		cout << i << ", ";

	cout << endl << "== data1 ==" << endl;
	for (auto i : data1)
		cout << i << ", ";

	return 0;
}

// 050 - 무작위로 문자열과 배열 섞기 ( randome_shuffle )

#include <iostream>
#include <ctime>

using namespace std;
#pragma warning(disable : 4996)

int main(int argc, char* argv[])
{
	time_t now = time(NULL);
	tm* ptm = localtime(&now);

	char buffer[64];
	strftime(buffer, 64, "예제 만드는 지금은 %Y년 %m월 %d일, %H시 %M분 %S초입니다.(%p)\n", ptm);

	cout << buffer;
	return 0;
}

// 051 - 날짜와 시간을 문자열로 변환하기 ( localtime )

#include <iostream>
#include <ctime>

using namespace std;

int main(int argc, char* argv[])
{
	time_t start = time(NULL);
	time_t finish= time(NULL);

	int pass_int = 1;

	time(&start);
	cout << start << endl;

	for (int i = 1; i < 100000;i++) {

		for (int j = 1;j < 100000;j++)
			pass_int += 1;	
	}

	time(&finish);
	cout << finish << endl;

	cout << "1을 100억 번 더하는 시간 : " << difftime(finish, start) << "초\n";

	return 0;
}

// 052 - 지나간 시간 알아내기 ( time )

#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
	string seven_war = "임진왜란";
	string korea_war = "한국전쟁";

	if (seven_war.compare(korea_war) == 0)
		cout << "같은 문자열입니다.";
	else
		cout << "다른 문자열입니다.";

	return 0;
}

// 053 - 문자열 비교하기 ( string.compare ) 

#include <iostream>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	string baekhap_war = "백합벌 전투 : 백제 왕자 부여창의 일기토로 유명한 전투";
	int rtn = baekhap_war.find("부여창");

	if (rtn > 0)
	cout << "문자열을 찾았습니다. 위치는 " << rtn << "입니다." << endl;
	else
	{
		cout << "문자열을 찾을 수 없습니다." << endl;
	}
	return 0;
}

// 054 - 문자열 조회하기 ( find )

#include <iostream>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	string baekhap_war = "백합벌 전투 : 백제 왕자 부여창의 일기토로 유명한 전투";

		cout << "백합벌 전투 설명 길이 : " <<baekhap_war.length()<< endl;
	return 0;
}

// 055 - 문자열 길이 구하기 ( length )

#include <iostream>
#include <string>
#include <algorithm>

using namespace std;

int main(int argc, char* argv[])
{
	string silla = "divided into the Three  Kingdoms.";

	transform(silla.begin(), silla.end(), silla.begin(), toupper);

	char lower_ch = 'g';
	char upper_ch = 'B';

	lower_ch = toupper(lower_ch);
	upper_ch = tolower(upper_ch);

	cout << "문자열 대문자로 : " << silla << endl;
	cout << "문자를 대문자로 : " << lower_ch << endl;
	cout << "문자를 소문자로 : " << upper_ch << endl;
	return 0;
}

// 056 - 문자열 대소문자 변환하기 ( toupper, tolower ) 

#include <iostream>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	string king = "조선 세종";
	string favorite1 = "고기";
	string favorite2 = "야근";

	string king_info = "";

	king_info += king;
	king_info += "은 ";
	king_info += favorite1;
	king_info.append("와 ");
	king_info.append(favorite2);
	king_info.append("을 좋아했습니다.");

	cout << king_info << endl;

	return 0;
}

// 057 - 문자열 합치기 ( += )

#include <iostream>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	string sentence = "I coding";
	sentence.insert(2, "hate ");
	cout << sentence << endl;

	sentence.insert(7, "or like ");
	cout << sentence << endl;

	return 0;
}

// 058 - 문자열 중간에 문자열 추가하기 ( insert )

#include <iostream>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	string sentence = "I hate coding.";

	sentence.erase(0, 7);

	cout << "I like " << sentence << endl;

	return 0;
}

// 059 - 문자열 일부 지우기 ( erase )

#include <iostream>
#include <string>
#include <vector>

using namespace std;

int main(int argc, char* argv[])
{
	string str1 = "I like coding.";
	string str2 = move(str1);

	cout << "str1 : " << str1 << endl;
	cout << "str2 : " << str2 << endl;

	vector <int> v1 = { 1,2,3, };
	vector <int> v2 = move(v1);

	cout << "v1 size : " << v1.size() << endl;
	cout << "v2 size : " << v2.size() << endl;

	return 0;
}

// 060 - 문자열 이동하기 ( move ) 

#include <iostream>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	string sentence = "I like coding.";

	sentence.erase(remove(sentence.begin(), sentence.end(), ' '), sentence.end());

	cout << sentence << endl;

	return 0;
}

// 061 - 문자열에서 특정 문자만 제거하기 ( erase, remove )

#include <iostream>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	string sentence = "I like coding.";
	string find_str = "coding";
	string replace_str = "history";

	sentence.replace(sentence.find(find_str), find_str.length(), replace_str);

	cout << sentence << endl;

	return 0;
}

// 062 - 문자열 일부 교체하기 ( replace ) 

#include <iostream>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	string str1 = "10";
	string str2 = "2.456";
	string str3 = "456 문자열";

	int num1 = stoi(str1);
	int num2 = stoi(str2);
	int num3 = stoi(str3);

	cout << num1 << ", " << num2 << ", " << num3 << endl;

	return 0;
}

// 063 - 문자열을 정수로 변환하기 ( stoi )

#include <iostream>
#include <sstream>

using namespace std;

int main(int argc, char* argv[])
{
	stringstream ss;

	double number1 = 0.0;

	ss << "1.2,2.6-3.8!4.7=8.9";

	cout << "== string to double ==" << endl;
	while (!ss.eof()) {

		ss >> number1;
		ss.ignore();

		cout << number1 << ", ";
	}
	ss.clear();
	ss.str("");
	ss << "1," << "2" << 3 << " " << 4;

	int number2 = 0;

	cout << endl << "== string to int ==" << endl;
	while (!ss.eof()) {

		ss >> number2;
		ss.ignore();

		cout << number2 << ", ";

	}
	return 0;
}

// 064 - 문자열을 숫자로 변환하기 ( stringstream )

#include <iostream>
#include <algorithm>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	string sort_str1 = "gojoeon";
	string sort_str2 = "AaBbCcDdEe";

	sort(sort_str1.begin(), sort_str1.end());
	sort(sort_str2.begin(), sort_str2.end());

	cout << "소문자만 정렬 : " << sort_str1 << endl;
	cout << "대소문자만 정렬 : " << sort_str2 << endl;

	return 0;
}

// 065 - 문자열 정렬하기 ( sort )

#include <iostream>
#include <algorithm>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	string str = "gfedcba";

	reverse(str.begin(), str.end());

	cout << str << endl;

	return 0;
}

// 066 - 문자열 뒤집기 ( reverse ) 

#include <iostream>
#include <string>

using namespace std;

int main(int argc, char* argv[])
{
	int number1 = 10;
	double number2 = 67.8;

	string no_str1 = to_string(number1);
	string no_str2 = to_string(number2);

	cout << "number1 : " << number1 << endl;
	cout << "number2 : " << number2 << endl;

	return 0;
}

// 067 - 숫자를 문자열로 변환하기 ( to_string )



